// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model Invoice {
  id                String    @id @default(cuid())
  invoiceNumber     String    @unique
  invoiceDate       DateTime  @default(now())
  shop              String
  orderId           String
  orderName         String
  customerName      String
  customerGSTIN     String?
  billingAddress    String    // JSON string
  shippingAddress   String    // JSON string
  sellerGSTIN       String
  placeOfSupply     String
  items             String    // JSON string - Array of invoice items
  totalValue        Float
  taxableValue      Float
  cgst              Float
  sgst              Float
  igst              Float
  reverseCharge     Boolean   @default(false)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  
  // Relations
  notificationLogs  NotificationLog[]
  
  @@index([shop])
  @@index([orderId])
}

model Customer {
  id                String    @id @default(cuid())
  shop              String
  shopifyCustomerId String
  name              String
  gstin             String?
  email             String?
  phone             String?
  notes             String?
  totalOrders       Int       @default(0)
  outstandingAmount Float     @default(0)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  
  @@unique([shop, shopifyCustomerId])
  @@index([shop])
}

model ShippingLabel {
  id              String    @id @default(cuid())
  shop            String
  orderId         String
  orderName       String
  customerName    String
  customerAddress String    // JSON string
  trackingId      String?
  barcode         String?
  qrCode          String?
  createdAt       DateTime  @default(now())
  
  // Relations
  notificationLogs NotificationLog[]
  
  @@index([shop])
  @@index([orderId])
}

model Subscription {
  id               String    @id @default(cuid())
  shop             String    @unique
  plan             String    // basic, standard, premium
  status           String    // active, trial, expired, cancelled
  trialEndsAt      DateTime?
  currentPeriodEnd DateTime
  invoiceCount     Int       @default(0)
  labelCount       Int       @default(0)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

model AppSettings {
  id                String    @id @default(cuid())
  shop              String    @unique
  sellerGSTIN       String
  sellerName        String
  sellerAddress     String    // JSON string
  invoicePrefix     String    @default("INV")
  invoiceStartNumber Int      @default(1)
  currentInvoiceNumber Int    @default(1)
  termsAndConditions String?
  digitalSignature  String?   // Base64 encoded image
  storeLogo         String?   // Base64 encoded image
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model Order {
  id                    String   @id @default(cuid())
  shop                  String
  shopifyOrderId        String
  orderNumber           String
  email                 String?
  phone                 String?
  financialStatus       String?
  fulfillmentStatus     String?
  totalPrice            Float    @default(0)
  subtotalPrice         Float    @default(0)
  totalTax              Float    @default(0)
  currency              String   @default("INR")
  orderDate             DateTime
  updatedAt             DateTime @updatedAt
  createdAt             DateTime @default(now())
  
  // JSON fields for complex data
  customerData          String?  // JSON
  billingAddress        String?  // JSON
  shippingAddress       String?  // JSON
  lineItems             String   // JSON
  taxLines              String   // JSON
  discountApplications  String   // JSON
  shippingLines         String   // JSON
  noteAttributes        String   // JSON
  tags                  String   // JSON
  
  // Additional fields
  note                  String?
  gateway               String?
  sourceIdentifier      String?
  sourceUrl             String?
  deviceId              String?
  browserIp             String?
  landingSite           String?
  referringSite         String?
  
  // Relations
  notificationLogs      NotificationLog[]
  
  @@unique([shop, shopifyOrderId])
  @@index([shop, orderDate])
  @@index([shop, financialStatus])
  @@index([shop, fulfillmentStatus])
}

model NotificationLog {
  id             String   @id @default(cuid())
  type           String   // EMAIL, WHATSAPP, SMS, BULK
  event          String   // INVOICE_SENT, SHIPPING_NOTIFICATION, PAYMENT_REMINDER, etc.
  recipientId    String?
  recipientEmail String?
  recipientPhone String?
  invoiceId      String?
  orderId        String?
  labelId        String?
  status         String   // SUCCESS, FAILED, PENDING
  error          String?
  metadata       String?  // JSON string for additional data
  recipientCount Int?     // For bulk operations
  shopId         String
  createdAt      DateTime @default(now())

  // Relations
  invoice Invoice? @relation(fields: [invoiceId], references: [id])
  order   Order?   @relation(fields: [orderId], references: [id])
  label   ShippingLabel? @relation(fields: [labelId], references: [id])

  @@map("notification_logs")
}

model BulkOperationLog {
  id           String   @id @default(cuid())
  type         String   // BULK_INVOICE_GENERATION, BULK_LABEL_GENERATION, etc.
  totalItems   Int
  successCount Int
  failureCount Int
  options      String?  // JSON string for operation options
  shopId       String
  completedAt  DateTime @default(now())
  createdAt    DateTime @default(now())

  @@map("bulk_operation_logs")
}
